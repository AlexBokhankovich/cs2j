<?xml version="1.0" encoding="utf-8"?>
<Class xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:noNamespaceSchemaLocation="file://C:/Documents%20and%20Settings/kevin.glynn/My%20Documents/CS2JLibrary/Translation.xsd"
 xmlns:xsd="http://www.w3.org/2001/XMLSchema">
 <Name>System.Double</Name>
 <Java>double</Java>
 <Inherits>
    <Type>System.Number</Type>
    <Type>System.IComparable</Type>
    <Type>System.IFormattable</Type>
    <Type>System.IConvertible</Type>
 </Inherits>
 <Properties>
    <Property>
       <Name>MinValue</Name>
       <Type>System.Double</Type>
       <Get>Double.MIN_VALUE</Get>
    </Property>
    <Property>
       <Name>MaxValue</Name>
       <Type>System.Double</Type>
       <Get>Double.MAX_VALUE</Get>
    </Property>
    <Property>
       <Name>NaN</Name>
       <Type>System.Double</Type>
       <Get>Double.NaN</Get>
    </Property>    
    <Property>
       <Name>NegativeInfinity</Name>
       <Type>System.Double</Type>
       <Get>Double.NEGATIVE_INFINITY</Get>
    </Property>    
    <Property>
       <Name>PositiveInfinity</Name>
       <Type>System.Double</Type>
       <Get>Double.POSITIVE_INFINITY</Get>
    </Property>            
 </Properties>
 <Methods>
    <Method>
      <Return>System.Boolean</Return>
      <Name>IsNaN</Name>
      <Params>
        <Param>
           <Name>d</Name>
           <Type>System.Double</Type>
        </Param>
      </Params>
      <Java>Double.isNaN(${d})</Java>
    </Method>
    <Method>
      <Return>System.Double</Return>
      <Name>Parse</Name>
      <Params>
        <Param>
           <Name>dStr</Name>
           <Type>System.String</Type>
        </Param>
      </Params>
      <Java>Double.valueOf(${dStr})</Java>
    </Method>
    <Method>
      <Return>System.Double</Return>
      <Name>Parse</Name>
      <Params>
        <Param>
           <Name>dStr</Name>
           <Type>System.String</Type>
        </Param>
        <Param>
           <Name>provider</Name>
           <Type>System.IFormatProvider</Type>
        </Param>
      </Params>
      <Imports>
        <Import>java.text.NumberFormat</Import>
      </Imports>
      <Java>NumberFormat.getInstance(${provider}).parse(${dStr}).doubleValue()</Java>
    </Method>
    <Method>
      <Return>System.Double</Return>
      <Name>Parse</Name>
      <Params>
        <Param>
           <Name>dStr</Name>
           <Type>System.String</Type>
        </Param>
        <Param>
           <Name>style</Name>
           <Type>System.Globalization.NumberStyles</Type>
        </Param>
        <Param>
           <Name>provider</Name>
           <Type>System.IFormatProvider</Type>
        </Param>
      </Params>
      <Imports>
        <Import>RusticiSoftware.System.*</Import>
      </Imports>
      <Java>DoubleSupport.parse(${dStr}, ${style}, ${provider})</Java>
    </Method>
 	<Method>
      <Return>System.String</Return>
      <Name>ToString</Name>
      <Params>
        <Param>
           <Type>System.String</Type>
           <Name>format</Name>
        </Param>
      </Params>
      <Imports>
      	<Import>RusticiSoftware.System.*</Import>
      </Imports>
      <Java>DoubleSupport.ToString(${this}, ${format})</Java>
    </Method>
    <Method>
      <Return>System.String</Return>
      <Name>ToString</Name>
      <Java>String.valueOf(${this})</Java>
    </Method>
    <Method>
      <Return>System.String</Return>
      <Name>ToString</Name>
      <Params>
        <Param>
           <Type>System.Globalization.CultureInfo</Type>
           <Name>provider</Name>
        </Param>
      </Params>
      <Imports>
        <Import>RusticiSoftware.System.DoubleSupport</Import>
      </Imports>
      <Java>DoubleSupport.ToString(${this}, ${provider})</Java>
    </Method>
 </Methods>
 <Casts>
   <Cast>
     <From>System.Double</From>
     <To>System.Int32</To>
     <Java>((int)(${expr}))</Java>
   </Cast>
 </Casts>
</Class>
